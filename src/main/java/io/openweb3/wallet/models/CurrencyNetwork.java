/*
 * Wallet API Documentation
 * This is a custody wallet service api server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.wallet.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.openweb3.wallet.internal.JSON;

/**
 * CurrencyNetwork
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-04T22:33:13.574042+08:00[Asia/Shanghai]", comments = "Generator version: 7.13.0")
public class CurrencyNetwork {
  public static final String SERIALIZED_NAME_APP_ID = "app_id";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  @javax.annotation.Nullable
  private String appId;

  public static final String SERIALIZED_NAME_CAN_DEPOSIT = "can_deposit";
  @SerializedName(SERIALIZED_NAME_CAN_DEPOSIT)
  @javax.annotation.Nullable
  private Boolean canDeposit;

  public static final String SERIALIZED_NAME_CAN_TRANSFER = "can_transfer";
  @SerializedName(SERIALIZED_NAME_CAN_TRANSFER)
  @javax.annotation.Nullable
  private Boolean canTransfer;

  public static final String SERIALIZED_NAME_CAN_WITHDRAW = "can_withdraw";
  @SerializedName(SERIALIZED_NAME_CAN_WITHDRAW)
  @javax.annotation.Nullable
  private Boolean canWithdraw;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  @javax.annotation.Nullable
  private String code;

  public static final String SERIALIZED_NAME_CONTRACT_ADDRESS = "contract_address";
  @SerializedName(SERIALIZED_NAME_CONTRACT_ADDRESS)
  @javax.annotation.Nullable
  private String contractAddress;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  @javax.annotation.Nullable
  private Boolean disabled;

  public static final String SERIALIZED_NAME_FEE = "fee";
  @SerializedName(SERIALIZED_NAME_FEE)
  @javax.annotation.Nullable
  private String fee;

  public static final String SERIALIZED_NAME_FEE_CURRENCY = "fee_currency";
  @SerializedName(SERIALIZED_NAME_FEE_CURRENCY)
  @javax.annotation.Nullable
  private String feeCurrency;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_MAX_FEE = "max_fee";
  @SerializedName(SERIALIZED_NAME_MAX_FEE)
  @javax.annotation.Nullable
  private String maxFee;

  public static final String SERIALIZED_NAME_MAX_FEE_FOR_CT_ADDR = "max_fee_for_ct_addr";
  @SerializedName(SERIALIZED_NAME_MAX_FEE_FOR_CT_ADDR)
  @javax.annotation.Nullable
  private String maxFeeForCtAddr;

  public static final String SERIALIZED_NAME_MAX_WITHDRAW_AMOUNT = "max_withdraw_amount";
  @SerializedName(SERIALIZED_NAME_MAX_WITHDRAW_AMOUNT)
  @javax.annotation.Nullable
  private String maxWithdrawAmount;

  public static final String SERIALIZED_NAME_MIN_COLLECT_AMOUNT = "min_collect_amount";
  @SerializedName(SERIALIZED_NAME_MIN_COLLECT_AMOUNT)
  @javax.annotation.Nullable
  private String minCollectAmount;

  public static final String SERIALIZED_NAME_MIN_CONFIRMATIONS = "min_confirmations";
  @SerializedName(SERIALIZED_NAME_MIN_CONFIRMATIONS)
  @javax.annotation.Nullable
  private Integer minConfirmations;

  public static final String SERIALIZED_NAME_MIN_DEPOSIT_AMOUNT = "min_deposit_amount";
  @SerializedName(SERIALIZED_NAME_MIN_DEPOSIT_AMOUNT)
  @javax.annotation.Nullable
  private String minDepositAmount;

  public static final String SERIALIZED_NAME_MIN_FEE = "min_fee";
  @SerializedName(SERIALIZED_NAME_MIN_FEE)
  @javax.annotation.Nullable
  private String minFee;

  public static final String SERIALIZED_NAME_MIN_FEE_FOR_CT_ADDR = "min_fee_for_ct_addr";
  @SerializedName(SERIALIZED_NAME_MIN_FEE_FOR_CT_ADDR)
  @javax.annotation.Nullable
  private String minFeeForCtAddr;

  public static final String SERIALIZED_NAME_MIN_WITHDRAW_AMOUNT = "min_withdraw_amount";
  @SerializedName(SERIALIZED_NAME_MIN_WITHDRAW_AMOUNT)
  @javax.annotation.Nullable
  private String minWithdrawAmount;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_NEED_MEMO = "need_memo";
  @SerializedName(SERIALIZED_NAME_NEED_MEMO)
  @javax.annotation.Nullable
  private Boolean needMemo;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  @javax.annotation.Nullable
  private String network;

  public CurrencyNetwork() {
  }

  public CurrencyNetwork appId(@javax.annotation.Nullable String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * Get appId
   * @return appId
   */
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }

  public void setAppId(@javax.annotation.Nullable String appId) {
    this.appId = appId;
  }


  public CurrencyNetwork canDeposit(@javax.annotation.Nullable Boolean canDeposit) {
    this.canDeposit = canDeposit;
    return this;
  }

  /**
   * Get canDeposit
   * @return canDeposit
   */
  @javax.annotation.Nullable
  public Boolean getCanDeposit() {
    return canDeposit;
  }

  public void setCanDeposit(@javax.annotation.Nullable Boolean canDeposit) {
    this.canDeposit = canDeposit;
  }


  public CurrencyNetwork canTransfer(@javax.annotation.Nullable Boolean canTransfer) {
    this.canTransfer = canTransfer;
    return this;
  }

  /**
   * Get canTransfer
   * @return canTransfer
   */
  @javax.annotation.Nullable
  public Boolean getCanTransfer() {
    return canTransfer;
  }

  public void setCanTransfer(@javax.annotation.Nullable Boolean canTransfer) {
    this.canTransfer = canTransfer;
  }


  public CurrencyNetwork canWithdraw(@javax.annotation.Nullable Boolean canWithdraw) {
    this.canWithdraw = canWithdraw;
    return this;
  }

  /**
   * Get canWithdraw
   * @return canWithdraw
   */
  @javax.annotation.Nullable
  public Boolean getCanWithdraw() {
    return canWithdraw;
  }

  public void setCanWithdraw(@javax.annotation.Nullable Boolean canWithdraw) {
    this.canWithdraw = canWithdraw;
  }


  public CurrencyNetwork code(@javax.annotation.Nullable String code) {
    this.code = code;
    return this;
  }

  /**
   * 用 code 和 Currency 关联
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(@javax.annotation.Nullable String code) {
    this.code = code;
  }


  public CurrencyNetwork contractAddress(@javax.annotation.Nullable String contractAddress) {
    this.contractAddress = contractAddress;
    return this;
  }

  /**
   * Get contractAddress
   * @return contractAddress
   */
  @javax.annotation.Nullable
  public String getContractAddress() {
    return contractAddress;
  }

  public void setContractAddress(@javax.annotation.Nullable String contractAddress) {
    this.contractAddress = contractAddress;
  }


  public CurrencyNetwork disabled(@javax.annotation.Nullable Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

  /**
   * Get disabled
   * @return disabled
   */
  @javax.annotation.Nullable
  public Boolean getDisabled() {
    return disabled;
  }

  public void setDisabled(@javax.annotation.Nullable Boolean disabled) {
    this.disabled = disabled;
  }


  public CurrencyNetwork fee(@javax.annotation.Nullable String fee) {
    this.fee = fee;
    return this;
  }

  /**
   * Get fee
   * @return fee
   */
  @javax.annotation.Nullable
  public String getFee() {
    return fee;
  }

  public void setFee(@javax.annotation.Nullable String fee) {
    this.fee = fee;
  }


  public CurrencyNetwork feeCurrency(@javax.annotation.Nullable String feeCurrency) {
    this.feeCurrency = feeCurrency;
    return this;
  }

  /**
   * Get feeCurrency
   * @return feeCurrency
   */
  @javax.annotation.Nullable
  public String getFeeCurrency() {
    return feeCurrency;
  }

  public void setFeeCurrency(@javax.annotation.Nullable String feeCurrency) {
    this.feeCurrency = feeCurrency;
  }


  public CurrencyNetwork id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public CurrencyNetwork maxFee(@javax.annotation.Nullable String maxFee) {
    this.maxFee = maxFee;
    return this;
  }

  /**
   * Get maxFee
   * @return maxFee
   */
  @javax.annotation.Nullable
  public String getMaxFee() {
    return maxFee;
  }

  public void setMaxFee(@javax.annotation.Nullable String maxFee) {
    this.maxFee = maxFee;
  }


  public CurrencyNetwork maxFeeForCtAddr(@javax.annotation.Nullable String maxFeeForCtAddr) {
    this.maxFeeForCtAddr = maxFeeForCtAddr;
    return this;
  }

  /**
   * Get maxFeeForCtAddr
   * @return maxFeeForCtAddr
   */
  @javax.annotation.Nullable
  public String getMaxFeeForCtAddr() {
    return maxFeeForCtAddr;
  }

  public void setMaxFeeForCtAddr(@javax.annotation.Nullable String maxFeeForCtAddr) {
    this.maxFeeForCtAddr = maxFeeForCtAddr;
  }


  public CurrencyNetwork maxWithdrawAmount(@javax.annotation.Nullable String maxWithdrawAmount) {
    this.maxWithdrawAmount = maxWithdrawAmount;
    return this;
  }

  /**
   * 单笔最大链上提币量
   * @return maxWithdrawAmount
   */
  @javax.annotation.Nullable
  public String getMaxWithdrawAmount() {
    return maxWithdrawAmount;
  }

  public void setMaxWithdrawAmount(@javax.annotation.Nullable String maxWithdrawAmount) {
    this.maxWithdrawAmount = maxWithdrawAmount;
  }


  public CurrencyNetwork minCollectAmount(@javax.annotation.Nullable String minCollectAmount) {
    this.minCollectAmount = minCollectAmount;
    return this;
  }

  /**
   * 最小归集数量
   * @return minCollectAmount
   */
  @javax.annotation.Nullable
  public String getMinCollectAmount() {
    return minCollectAmount;
  }

  public void setMinCollectAmount(@javax.annotation.Nullable String minCollectAmount) {
    this.minCollectAmount = minCollectAmount;
  }


  public CurrencyNetwork minConfirmations(@javax.annotation.Nullable Integer minConfirmations) {
    this.minConfirmations = minConfirmations;
    return this;
  }

  /**
   * Get minConfirmations
   * @return minConfirmations
   */
  @javax.annotation.Nullable
  public Integer getMinConfirmations() {
    return minConfirmations;
  }

  public void setMinConfirmations(@javax.annotation.Nullable Integer minConfirmations) {
    this.minConfirmations = minConfirmations;
  }


  public CurrencyNetwork minDepositAmount(@javax.annotation.Nullable String minDepositAmount) {
    this.minDepositAmount = minDepositAmount;
    return this;
  }

  /**
   * 单笔最小存入值
   * @return minDepositAmount
   */
  @javax.annotation.Nullable
  public String getMinDepositAmount() {
    return minDepositAmount;
  }

  public void setMinDepositAmount(@javax.annotation.Nullable String minDepositAmount) {
    this.minDepositAmount = minDepositAmount;
  }


  public CurrencyNetwork minFee(@javax.annotation.Nullable String minFee) {
    this.minFee = minFee;
    return this;
  }

  /**
   * Get minFee
   * @return minFee
   */
  @javax.annotation.Nullable
  public String getMinFee() {
    return minFee;
  }

  public void setMinFee(@javax.annotation.Nullable String minFee) {
    this.minFee = minFee;
  }


  public CurrencyNetwork minFeeForCtAddr(@javax.annotation.Nullable String minFeeForCtAddr) {
    this.minFeeForCtAddr = minFeeForCtAddr;
    return this;
  }

  /**
   * Get minFeeForCtAddr
   * @return minFeeForCtAddr
   */
  @javax.annotation.Nullable
  public String getMinFeeForCtAddr() {
    return minFeeForCtAddr;
  }

  public void setMinFeeForCtAddr(@javax.annotation.Nullable String minFeeForCtAddr) {
    this.minFeeForCtAddr = minFeeForCtAddr;
  }


  public CurrencyNetwork minWithdrawAmount(@javax.annotation.Nullable String minWithdrawAmount) {
    this.minWithdrawAmount = minWithdrawAmount;
    return this;
  }

  /**
   * 单笔最小链上提币量
   * @return minWithdrawAmount
   */
  @javax.annotation.Nullable
  public String getMinWithdrawAmount() {
    return minWithdrawAmount;
  }

  public void setMinWithdrawAmount(@javax.annotation.Nullable String minWithdrawAmount) {
    this.minWithdrawAmount = minWithdrawAmount;
  }


  public CurrencyNetwork name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public CurrencyNetwork needMemo(@javax.annotation.Nullable Boolean needMemo) {
    this.needMemo = needMemo;
    return this;
  }

  /**
   * Get needMemo
   * @return needMemo
   */
  @javax.annotation.Nullable
  public Boolean getNeedMemo() {
    return needMemo;
  }

  public void setNeedMemo(@javax.annotation.Nullable Boolean needMemo) {
    this.needMemo = needMemo;
  }


  public CurrencyNetwork network(@javax.annotation.Nullable String network) {
    this.network = network;
    return this;
  }

  /**
   * Get network
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(@javax.annotation.Nullable String network) {
    this.network = network;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurrencyNetwork currencyNetwork = (CurrencyNetwork) o;
    return Objects.equals(this.appId, currencyNetwork.appId) &&
        Objects.equals(this.canDeposit, currencyNetwork.canDeposit) &&
        Objects.equals(this.canTransfer, currencyNetwork.canTransfer) &&
        Objects.equals(this.canWithdraw, currencyNetwork.canWithdraw) &&
        Objects.equals(this.code, currencyNetwork.code) &&
        Objects.equals(this.contractAddress, currencyNetwork.contractAddress) &&
        Objects.equals(this.disabled, currencyNetwork.disabled) &&
        Objects.equals(this.fee, currencyNetwork.fee) &&
        Objects.equals(this.feeCurrency, currencyNetwork.feeCurrency) &&
        Objects.equals(this.id, currencyNetwork.id) &&
        Objects.equals(this.maxFee, currencyNetwork.maxFee) &&
        Objects.equals(this.maxFeeForCtAddr, currencyNetwork.maxFeeForCtAddr) &&
        Objects.equals(this.maxWithdrawAmount, currencyNetwork.maxWithdrawAmount) &&
        Objects.equals(this.minCollectAmount, currencyNetwork.minCollectAmount) &&
        Objects.equals(this.minConfirmations, currencyNetwork.minConfirmations) &&
        Objects.equals(this.minDepositAmount, currencyNetwork.minDepositAmount) &&
        Objects.equals(this.minFee, currencyNetwork.minFee) &&
        Objects.equals(this.minFeeForCtAddr, currencyNetwork.minFeeForCtAddr) &&
        Objects.equals(this.minWithdrawAmount, currencyNetwork.minWithdrawAmount) &&
        Objects.equals(this.name, currencyNetwork.name) &&
        Objects.equals(this.needMemo, currencyNetwork.needMemo) &&
        Objects.equals(this.network, currencyNetwork.network);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appId, canDeposit, canTransfer, canWithdraw, code, contractAddress, disabled, fee, feeCurrency, id, maxFee, maxFeeForCtAddr, maxWithdrawAmount, minCollectAmount, minConfirmations, minDepositAmount, minFee, minFeeForCtAddr, minWithdrawAmount, name, needMemo, network);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurrencyNetwork {\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    canDeposit: ").append(toIndentedString(canDeposit)).append("\n");
    sb.append("    canTransfer: ").append(toIndentedString(canTransfer)).append("\n");
    sb.append("    canWithdraw: ").append(toIndentedString(canWithdraw)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    contractAddress: ").append(toIndentedString(contractAddress)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    feeCurrency: ").append(toIndentedString(feeCurrency)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maxFee: ").append(toIndentedString(maxFee)).append("\n");
    sb.append("    maxFeeForCtAddr: ").append(toIndentedString(maxFeeForCtAddr)).append("\n");
    sb.append("    maxWithdrawAmount: ").append(toIndentedString(maxWithdrawAmount)).append("\n");
    sb.append("    minCollectAmount: ").append(toIndentedString(minCollectAmount)).append("\n");
    sb.append("    minConfirmations: ").append(toIndentedString(minConfirmations)).append("\n");
    sb.append("    minDepositAmount: ").append(toIndentedString(minDepositAmount)).append("\n");
    sb.append("    minFee: ").append(toIndentedString(minFee)).append("\n");
    sb.append("    minFeeForCtAddr: ").append(toIndentedString(minFeeForCtAddr)).append("\n");
    sb.append("    minWithdrawAmount: ").append(toIndentedString(minWithdrawAmount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    needMemo: ").append(toIndentedString(needMemo)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_id");
    openapiFields.add("can_deposit");
    openapiFields.add("can_transfer");
    openapiFields.add("can_withdraw");
    openapiFields.add("code");
    openapiFields.add("contract_address");
    openapiFields.add("disabled");
    openapiFields.add("fee");
    openapiFields.add("fee_currency");
    openapiFields.add("id");
    openapiFields.add("max_fee");
    openapiFields.add("max_fee_for_ct_addr");
    openapiFields.add("max_withdraw_amount");
    openapiFields.add("min_collect_amount");
    openapiFields.add("min_confirmations");
    openapiFields.add("min_deposit_amount");
    openapiFields.add("min_fee");
    openapiFields.add("min_fee_for_ct_addr");
    openapiFields.add("min_withdraw_amount");
    openapiFields.add("name");
    openapiFields.add("need_memo");
    openapiFields.add("network");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CurrencyNetwork
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CurrencyNetwork.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CurrencyNetwork is not found in the empty JSON string", CurrencyNetwork.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CurrencyNetwork.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CurrencyNetwork` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("app_id") != null && !jsonObj.get("app_id").isJsonNull()) && !jsonObj.get("app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_id").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("contract_address") != null && !jsonObj.get("contract_address").isJsonNull()) && !jsonObj.get("contract_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contract_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contract_address").toString()));
      }
      if ((jsonObj.get("fee") != null && !jsonObj.get("fee").isJsonNull()) && !jsonObj.get("fee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fee").toString()));
      }
      if ((jsonObj.get("fee_currency") != null && !jsonObj.get("fee_currency").isJsonNull()) && !jsonObj.get("fee_currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fee_currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fee_currency").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("max_fee") != null && !jsonObj.get("max_fee").isJsonNull()) && !jsonObj.get("max_fee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_fee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_fee").toString()));
      }
      if ((jsonObj.get("max_fee_for_ct_addr") != null && !jsonObj.get("max_fee_for_ct_addr").isJsonNull()) && !jsonObj.get("max_fee_for_ct_addr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_fee_for_ct_addr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_fee_for_ct_addr").toString()));
      }
      if ((jsonObj.get("max_withdraw_amount") != null && !jsonObj.get("max_withdraw_amount").isJsonNull()) && !jsonObj.get("max_withdraw_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_withdraw_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_withdraw_amount").toString()));
      }
      if ((jsonObj.get("min_collect_amount") != null && !jsonObj.get("min_collect_amount").isJsonNull()) && !jsonObj.get("min_collect_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `min_collect_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("min_collect_amount").toString()));
      }
      if ((jsonObj.get("min_deposit_amount") != null && !jsonObj.get("min_deposit_amount").isJsonNull()) && !jsonObj.get("min_deposit_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `min_deposit_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("min_deposit_amount").toString()));
      }
      if ((jsonObj.get("min_fee") != null && !jsonObj.get("min_fee").isJsonNull()) && !jsonObj.get("min_fee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `min_fee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("min_fee").toString()));
      }
      if ((jsonObj.get("min_fee_for_ct_addr") != null && !jsonObj.get("min_fee_for_ct_addr").isJsonNull()) && !jsonObj.get("min_fee_for_ct_addr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `min_fee_for_ct_addr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("min_fee_for_ct_addr").toString()));
      }
      if ((jsonObj.get("min_withdraw_amount") != null && !jsonObj.get("min_withdraw_amount").isJsonNull()) && !jsonObj.get("min_withdraw_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `min_withdraw_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("min_withdraw_amount").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CurrencyNetwork.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CurrencyNetwork' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CurrencyNetwork> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CurrencyNetwork.class));

       return (TypeAdapter<T>) new TypeAdapter<CurrencyNetwork>() {
           @Override
           public void write(JsonWriter out, CurrencyNetwork value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CurrencyNetwork read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CurrencyNetwork given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CurrencyNetwork
   * @throws IOException if the JSON string is invalid with respect to CurrencyNetwork
   */
  public static CurrencyNetwork fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CurrencyNetwork.class);
  }

  /**
   * Convert an instance of CurrencyNetwork to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

