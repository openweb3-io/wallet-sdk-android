/*
 * Wallet OpenAPI Documentation
 * This is a custody wallet service openapi server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.wallet.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * WebhookEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-04T18:30:03.633689+08:00[Asia/Shanghai]")
public class WebhookEvent {
  public static final String SERIALIZED_NAME_EVENT_TYPE = "event_type";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private String eventType;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private Map<String, Object> payload = new HashMap<>();

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;


  public WebhookEvent eventType(String eventType) {
    
    this.eventType = eventType;
    return this;
  }

   /**
   * The type of the webhook event
   * @return eventType
  **/
  @ApiModelProperty(required = true, value = "The type of the webhook event")

  public String getEventType() {
    return eventType;
  }


  public void setEventType(String eventType) {
    this.eventType = eventType;
  }


  public WebhookEvent id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the webhook event
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The id of the webhook event")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public WebhookEvent payload(Map<String, Object> payload) {
    
    this.payload = payload;
    return this;
  }

  public WebhookEvent putPayloadItem(String key, Object payloadItem) {
    this.payload.put(key, payloadItem);
    return this;
  }

   /**
   * The payload of the webhook event
   * @return payload
  **/
  @ApiModelProperty(required = true, value = "The payload of the webhook event")

  public Map<String, Object> getPayload() {
    return payload;
  }


  public void setPayload(Map<String, Object> payload) {
    this.payload = payload;
  }


  public WebhookEvent timestamp(String timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The timestamp of the webhook event
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "The timestamp of the webhook event")

  public String getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookEvent webhookEvent = (WebhookEvent) o;
    return Objects.equals(this.eventType, webhookEvent.eventType) &&
        Objects.equals(this.id, webhookEvent.id) &&
        Objects.equals(this.payload, webhookEvent.payload) &&
        Objects.equals(this.timestamp, webhookEvent.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventType, id, payload, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookEvent {\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

